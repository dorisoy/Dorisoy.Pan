// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Dorisoy.PanClient.Data.Contexts;

#nullable disable

namespace Dorisoy.PanClient.Data.Migrations
{
    [DbContext(typeof(CaptureManagerContext))]
    [Migration("20230811035858_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dorisoy.PanClient.Data.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NewValues")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValues")
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("longtext");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Audits", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FullPath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Name", "IsDeleted", "ParentId");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAttachment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Path")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PatienterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PhysicalFolderId")
                        .HasColumnType("char(36)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("ThumbnailPath")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PhysicalFolderId");

                    b.HasIndex("Name", "IsDeleted", "PhysicalFolderId");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentAuditTrail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentAuditTrails", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("DocumentComments");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentDeleted", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("DocumentId", "UserId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentDeleteds");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentReminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentReminders", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentShareableLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsAllowDownload")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLinkExpired")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LinkCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LinkExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentShareableLinks", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentStarred", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentStarreds", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DocumentVersionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Token")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTokens", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Path")
                        .HasColumnType("longtext");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("DocumentVersions", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.EmailSMTPSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnableSSL")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EmailSMTPSettings", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.HierarchyFolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsShared")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PhysicalFolderId")
                        .HasColumnType("char(36)");

                    b.Property<long>("SystemFolderName")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HierarchyFolders");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Operate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("PageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("Actions", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PhysicalFolderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RaleName")
                        .HasColumnType("longtext");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("StorePath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("VirtualFolderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.PhysicalFolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.Property<long>("SystemFolderName")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Name", "IsDeleted", "ParentId");

                    b.ToTable("PhysicalFolders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79073ec1-51e2-4772-95e6-9b06075a174b"),
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(7553),
                            IsDeleted = false,
                            Name = "All Files",
                            Size = "",
                            SystemFolderName = 1L
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.PhysicalFolderUser", b =>
                {
                    b.Property<Guid>("FolderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("FolderId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PhysicalFolderUsers");

                    b.HasData(
                        new
                        {
                            FolderId = new Guid("79073ec1-51e2-4772-95e6-9b06075a174b"),
                            UserId = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91")
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.RecentActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FolderId");

                    b.HasIndex("UserId");

                    b.ToTable("RecentActivities", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NormalizedName")
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 119, DateTimeKind.Local).AddTicks(9005),
                            Description = "表示拥有超级管理权限的用户",
                            IsDeleted = false,
                            IsSystem = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "超级管理员",
                            NormalizedName = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("b12a5896-ddca-4434-94c4-58f0fa420a0b"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 119, DateTimeKind.Local).AddTicks(9020),
                            Description = "表示拥有医生管理权限的用户",
                            IsDeleted = false,
                            IsSystem = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "教师",
                            NormalizedName = "Docter"
                        },
                        new
                        {
                            Id = new Guid("0e954f0a-80f3-4794-81f2-452aa625f460"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 119, DateTimeKind.Local).AddTicks(9031),
                            Description = "表示拥有平台平台权限的用户",
                            IsDeleted = false,
                            IsSystem = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "学生",
                            NormalizedName = "Employe"
                        },
                        new
                        {
                            Id = new Guid("d7356bd4-eb59-4459-9a52-e0689fb20178"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 119, DateTimeKind.Local).AddTicks(9033),
                            Description = "自定义其它用户权限",
                            IsDeleted = false,
                            IsSystem = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "其它",
                            NormalizedName = "Other"
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Group")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.View",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(206),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.Create",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(219),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.Edit",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(221),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.Delete",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(223),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.Export",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(224),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Users.Search",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(227),
                            Description = "用户管理访问控制",
                            Group = "用户管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Roles.View",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(235),
                            Description = "角色管理访问控制",
                            Group = "角色管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Roles.Create",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(238),
                            Description = "角色管理访问控制",
                            Group = "角色管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Roles.Edit",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(239),
                            Description = "角色管理访问控制",
                            Group = "角色管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Roles.Delete",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(242),
                            Description = "角色管理访问控制",
                            Group = "角色管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.Roles.Search",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(243),
                            Description = "角色管理访问控制",
                            Group = "角色管理",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.RoleClaims.View",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(245),
                            Description = "角色权限访问控制",
                            Group = "权限记录",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.RoleClaims.Create",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(247),
                            Description = "角色权限访问控制",
                            Group = "权限记录",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.RoleClaims.Edit",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(248),
                            Description = "角色权限访问控制",
                            Group = "权限记录",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.RoleClaims.Delete",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(249),
                            Description = "角色权限访问控制",
                            Group = "权限记录",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "Permission",
                            ClaimValue = "Permissions.RoleClaims.Search",
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 120, DateTimeKind.Local).AddTicks(251),
                            Description = "角色权限访问控制",
                            Group = "权限记录",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.SharedDocumentUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("SharedDocumentUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("Provider")
                        .HasColumnType("longtext");

                    b.Property<string>("RaleName")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25af6e12-9a7d-4898-ba3d-3c6b0383a335",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@Dorisoy.com",
                            EmailConfirmed = false,
                            IsActive = false,
                            IsAdmin = true,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "AQAAAAEAACcQAAAAEEkx5K65gWhkIDvtcI3QVCom8fFRVWBIVlDWGqPujKdUWwSs2/0bB2fFzTaAq8z3pA==",
                            PhoneNumber = "13002929017",
                            PhoneNumberConfirmed = false,
                            RaleName = "Dorisoy",
                            SecurityStamp = "VIMQCBRWFS24UODE2URSTWPFEXKNDJRP",
                            Sex = 0,
                            TwoFactorEnabled = false,
                            UserName = "administrator"
                        },
                        new
                        {
                            Id = new Guid("03cd9f6a-cadb-4ad9-97dc-c94b7f8a273b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "784e5a8f-af1f-4347-944b-e594d31dea08",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@Dorisoy.com",
                            EmailConfirmed = false,
                            IsActive = false,
                            IsAdmin = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "AQAAAAEAACcQAAAAEEkx5K65gWhkIDvtcI3QVCom8fFRVWBIVlDWGqPujKdUWwSs2/0bB2fFzTaAq8z3pA==",
                            PhoneNumber = "13002929018",
                            PhoneNumberConfirmed = false,
                            RaleName = "王思聪",
                            SecurityStamp = "VIMQCBRWFS24UODE2URSTWPFEXKNDJRP",
                            Sex = 0,
                            TwoFactorEnabled = false,
                            UserName = "测试"
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserDocumentClaim", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("DocumentId", "UserId");

                    b.HasIndex("UserId");

                    b.HasIndex("DocumentId", "UserId");

                    b.ToTable("UserPermissions", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ErrorMsg")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("ToUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FolderId");

                    b.ToTable("UserNotifications", (string)null);
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            RoleId = new Guid("0358fe78-3f71-4cab-bc9f-d1bf38e86708")
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.VirtualFolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShared")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PhysicalFolderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PhysicalFolderId");

                    b.HasIndex("Name", "IsDeleted", "ParentId", "PhysicalFolderId");

                    b.ToTable("VirtualFolders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4d06132-d76c-49b5-8472-2bf78ac4147e"),
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 121, DateTimeKind.Local).AddTicks(846),
                            IsDeleted = false,
                            IsShared = false,
                            Name = "All Files",
                            PhysicalFolderId = new Guid("79073ec1-51e2-4772-95e6-9b06075a174b"),
                            Size = ""
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.VirtualFolderUser", b =>
                {
                    b.Property<Guid>("FolderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsStarred")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("FolderId", "UserId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserId");

                    b.ToTable("VirtualFolderUsers");

                    b.HasData(
                        new
                        {
                            FolderId = new Guid("a4d06132-d76c-49b5-8472-2bf78ac4147e"),
                            UserId = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            CreatedDate = new DateTime(2023, 8, 11, 11, 58, 58, 121, DateTimeKind.Local).AddTicks(874),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            IsStarred = true,
                            ModifiedBy = new Guid("115ce6fb-eaeb-49c9-9842-583ace34aa91"),
                            ModifiedDate = new DateTime(2023, 8, 11, 11, 58, 58, 121, DateTimeKind.Local).AddTicks(876)
                        });
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Department", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Department", null)
                        .WithMany("Children")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Document", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.PhysicalFolder", "Folder")
                        .WithMany()
                        .HasForeignKey("PhysicalFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Folder");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentAuditTrail", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentComment", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Document");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentDeleted", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany("DocumentDeleteds")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Document");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentReminder", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentShareableLink", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentStarred", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany("DocumentStarreds")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.DocumentVersion", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Document");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.EmailSMTPSetting", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Operate", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("Dorisoy.PanClient.Data.Page", "Page")
                        .WithMany("Actions")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Page", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.PhysicalFolder", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.PhysicalFolder", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.PhysicalFolderUser", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.PhysicalFolder", "PhysicalFolder")
                        .WithMany("PhysicalFolderUsers")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany("Folders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhysicalFolder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.RecentActivity", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dorisoy.PanClient.Data.VirtualFolder", "VirtualFolder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");

                    b.Navigation("VirtualFolder");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Role", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.RoleClaim", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.SharedDocumentUser", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany("SharedDocumentUsers")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserClaim", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Operate", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserDocumentClaim", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany("UserDocumentClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserNotification", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dorisoy.PanClient.Data.VirtualFolder", "VirtualFolder")
                        .WithMany()
                        .HasForeignKey("FolderId");

                    b.Navigation("Document");

                    b.Navigation("VirtualFolder");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.UserRole", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.VirtualFolder", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.VirtualFolder", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dorisoy.PanClient.Data.PhysicalFolder", "PhysicalFolder")
                        .WithMany()
                        .HasForeignKey("PhysicalFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("PhysicalFolder");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.VirtualFolderUser", b =>
                {
                    b.HasOne("Dorisoy.PanClient.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dorisoy.PanClient.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.VirtualFolder", "VirtualFolder")
                        .WithMany("VirtualFolderUsers")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dorisoy.PanClient.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dorisoy.PanClient.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("User");

                    b.Navigation("VirtualFolder");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Department", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Document", b =>
                {
                    b.Navigation("DocumentDeleteds");

                    b.Navigation("DocumentStarreds");

                    b.Navigation("SharedDocumentUsers");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Page", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.PhysicalFolder", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("PhysicalFolderUsers");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.User", b =>
                {
                    b.Navigation("Folders");

                    b.Navigation("UserClaims");

                    b.Navigation("UserDocumentClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Dorisoy.PanClient.Data.VirtualFolder", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("VirtualFolderUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
