<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
                    xmlns:uip="clr-namespace:FluentAvalonia.UI.Controls.Primitives;assembly=FluentAvalonia"
                    x:CompileBindings="True">

    <Design.PreviewWith>
        <Border Padding="40">
            <StackPanel Spacing="10">
                <ui:InfoBar IsOpen="True" Title="Title1" Message="Message" IsClosable="True" IsIconVisible="True" />
                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" IsClosable="False" IsIconVisible="True" />
                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" IsClosable="True" IsIconVisible="False" />

                <Border Background="Black" Height="1" />

                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" Severity="Informational" />
                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" Severity="Warning" />
                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" Severity="Error" />
                <ui:InfoBar IsOpen="True" Title="Title" Message="Message" Severity="Success" />

                <ui:InfoBar IsOpen="True" Title="Title" Background="DarkSlateBlue" Message="Message" Severity="Success" Foreground="Red" />

                <ui:InfoBar IsOpen="True" Title="Custom Icon" Message="akls;df">
                    <ui:InfoBar.IconSource>
                        <ui:SymbolIconSource Symbol="Add" />
                    </ui:InfoBar.IconSource>
                </ui:InfoBar>

                <ui:InfoBar IsOpen="True" Title="Title" Message="Action Button">
                    <ui:InfoBar.ActionButton>
                        <Button Content="Click" />
                    </ui:InfoBar.ActionButton>
                </ui:InfoBar>

                <ui:InfoBar IsOpen="True" Title="Title" Message="asdf">
                    <CheckBox Content="Custom Content" />
                </ui:InfoBar>

            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <x:Double x:Key="InfoBarTitleFontSize">14</x:Double>
    <FontWeight x:Key="InfoBarTitleFontWeight">SemiBold</FontWeight>
    <x:Double x:Key="InfoBarMessageFontSize">14</x:Double>
    <FontWeight x:Key="InfoBarMessageFontWeight">Normal</FontWeight>
    <x:Double x:Key="InfoBarMinHeight">48</x:Double>
    <x:Double x:Key="InfoBarCloseButtonSize">38</x:Double>
    <x:Double x:Key="InfoBarCloseButtonGlyphSize">16</x:Double>
    <!-- This negative margin makes the link visually line up with the title/message -->
    <Thickness x:Key="InfoBarHyperlinkButtonMargin">-12,0,0,0</Thickness>
    <!-- Glyph code points updated for FluentIcons
        In doing so, the background glyph also updates to work with icons in FluentIcons
        which don't match Segoe MDL2 Assets
        
        We also have to set them in code b/c setting them in style handlers like WinUI
        does wasn't working. The style was applying (per DevTools) but the Text was showing
        as null. I suspect this is because Text on TextBlock is a DirectProperty and is
        probably just not playing nice with the styling system???
        -->
    <!--<x:String x:Key="InfoBarInformationalBackgroundGlyph">&#xF4AC;</x:String>-->
    <!--<x:String x:Key="InfoBarErrorBackgroundGlyph">&#xF3F1;</x:String>-->
    <!--<x:String x:Key="InfoBarWarningBackgroundGlyph">&#xF882;</x:String>-->
    <!--<x:String x:Key="InfoBarSuccessBackgroundGlyph">&#xF29A;</x:String>-->

    <!--<x:String x:Key="InfoBarInformationalIconGlyph">&#xF4A5;</x:String>-->
    <!--<x:String x:Key="InfoBarErrorIconGlyph">&#xF3F2;</x:String>-->
    <!--<x:String x:Key="InfoBarWarningIconGlyph">&#xF86A;</x:String>-->
    <!--<x:String x:Key="InfoBarSuccessIconGlyph">&#xF29A;</x:String>-->
    <Thickness x:Key="InfoBarContentRootPadding">16,0,0,0</Thickness>
    <Thickness x:Key="InfoBarIconMargin">0,16,14,16</Thickness>
    <x:Double x:Key="InfoBarIconFontSize">16</x:Double>
    <Thickness x:Key="InfoBarPanelMargin">0,0,16,0</Thickness>
    <Thickness x:Key="InfoBarPanelHorizontalOrientationPadding">0,0,0,0</Thickness>
    <Thickness x:Key="InfoBarPanelVerticalOrientationPadding">0,14,0,18</Thickness>
    <Thickness x:Key="InfoBarTitleHorizontalOrientationMargin">0,14,0,0</Thickness>
    <Thickness x:Key="InfoBarTitleVerticalOrientationMargin">0,14,0,0</Thickness>
    <Thickness x:Key="InfoBarMessageHorizontalOrientationMargin">12,14,0,0</Thickness>
    <Thickness x:Key="InfoBarMessageVerticalOrientationMargin">0,4,0,0</Thickness>
    <Thickness x:Key="InfoBarActionHorizontalOrientationMargin">16,8,0,0</Thickness>
    <Thickness x:Key="InfoBarActionVerticalOrientationMargin">0,12,0,0</Thickness>
    <ui:Symbol x:Key="InfoBarCloseButtonSymbol">Dismiss</ui:Symbol>

    
    <ControlTheme x:Key="InfoBarCloseButtonStyle"
                  BasedOn="{StaticResource TransparentButton}"
                  TargetType="Button">
        <Setter Property="Width" Value="{StaticResource InfoBarCloseButtonSize}" />
        <Setter Property="Height" Value="{StaticResource InfoBarCloseButtonSize}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </ControlTheme>

    <ControlTheme x:Key="{x:Type ui:InfoBar}" TargetType="ui:InfoBar">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <ControlTemplate>
                <ui:FABorder Name="ContentRoot"
                             VerticalAlignment="Top"
                             BorderBrush="{DynamicResource InfoBarBorderBrush}"
                             BorderThickness="{DynamicResource InfoBarBorderThickness}"
                             CornerRadius="{TemplateBinding CornerRadius}">

                    <!-- Background is used here so that it overrides the severity status color if set. 
                    Padding="{StaticResource InfoBarContentRootPadding}" applied as margin on grid b/c no Padding
                    -->
                    <Panel>
                        <!-- use separate border for Background b/c no margin -->
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Grid HorizontalAlignment="Stretch"
                              MinHeight="{DynamicResource InfoBarMinHeight}"
                              Margin="{StaticResource InfoBarContentRootPadding}"
                              ColumnDefinitions="Auto,*,Auto"
                              RowDefinitions="Auto,Auto">

                            <Panel Name="StandardIconArea"
                                   IsVisible="False">
                                <Ellipse Name="IconBackground"
                                         Width="16" Height="16"
                                         VerticalAlignment="Top"
                                         Margin="{StaticResource InfoBarIconMargin}"/>

                                <ui:FontIcon VerticalAlignment="Top"
                                             FontFamily="{StaticResource SymbolThemeFontFamily}"
                                             Name="StandardIcon"
                                             Margin="{DynamicResource InfoBarIconMargin}"/>
                            </Panel>

                            <Viewbox Name="UserIconBox"
                                     IsVisible="False"
                                     Grid.Column="0"
                                     VerticalAlignment="Top"
                                     MaxWidth="{DynamicResource InfoBarIconFontSize}"
                                     MaxHeight="{DynamicResource InfoBarIconFontSize}"
                                     Margin="{DynamicResource InfoBarIconMargin}">
                                <ui:IconSourceElement IconSource="{TemplateBinding IconSource}" />
                            </Viewbox>

                            <uip:InfoBarPanel Grid.Column="1"
                                              Margin="{StaticResource InfoBarPanelMargin}"
                                              HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                              VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">

                                <TextBlock Name="Title"
                                           Foreground="{DynamicResource InfoBarTitleForeground}"
                                           Text="{TemplateBinding Title}"
                                           uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                           uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                           TextWrapping="Wrap"
                                           FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                           FontSize="{StaticResource InfoBarTitleFontSize}" />

                                <TextBlock x:Name="Message"
                                           Foreground="{DynamicResource InfoBarMessageForeground}"
                                           Text="{TemplateBinding Message}"
                                           uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                           uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                           TextWrapping="Wrap"
                                           FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                           FontSize="{StaticResource InfoBarMessageFontSize}"/>

                                <ContentPresenter uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                                  uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}"
                                                  VerticalAlignment="Top"
                                                  Content="{TemplateBinding ActionButton}"
                                                  HorizontalContentAlignment="Stretch"
                                                  VerticalContentAlignment="Center" />

                            </uip:InfoBarPanel>

                            <ContentPresenter Grid.Column="1"
                                              Grid.Row="1"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Stretch"
                                              Name="ContentPresenter"/>

                            <Button Name="CloseButton"
                                       VerticalAlignment="Center"
                                       Grid.Column="2"
                                       Command="{TemplateBinding CloseButtonCommand}"
                                       CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                       Theme="{StaticResource InfoBarCloseButtonStyle}">

                                <Viewbox Width="{StaticResource InfoBarCloseButtonGlyphSize}"
                                         Height="{StaticResource InfoBarCloseButtonGlyphSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center">
                                    <ui:SymbolIcon Symbol="{StaticResource InfoBarCloseButtonSymbol}" />
                                </Viewbox>
                            </Button>
                        </Grid>
                    </Panel>
                </ui:FABorder>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:informational">
            <Style Selector="^ /template/ ui|FABorder#ContentRoot">
                <Setter Property="Background" Value="{DynamicResource InfoBarInformationalSeverityBackgroundBrush}" />
            </Style>
            <Style Selector="^ /template/ Ellipse#IconBackground">
                <Setter Property="Fill" Value="{DynamicResource InfoBarInformationalSeverityIconBackground}" />
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                <Setter Property="Glyph" Value="&#x0069;" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
            </Style>
        </Style>

        <Style Selector="^:error">
            <Style Selector="^ /template/ ui|FABorder#ContentRoot">
                <Setter Property="Background" Value="{DynamicResource InfoBarErrorSeverityBackgroundBrush}" />
            </Style>
            <Style Selector="^ /template/ Ellipse#IconBackground">
                <Setter Property="Fill" Value="{DynamicResource InfoBarErrorSeverityIconBackground}" />
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                <Setter Property="Glyph" Value="&#xE10A;" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                <Setter Property="Margin" Value="0,19,14,0" />
            </Style>
        </Style>

        <Style Selector="^:warning">
            <Style Selector="^ /template/ ui|FABorder#ContentRoot">
                <Setter Property="Background" Value="{DynamicResource InfoBarWarningSeverityBackgroundBrush}" />
            </Style>
            <Style Selector="^ /template/ Ellipse#IconBackground">
                <Setter Property="Fill" Value="{DynamicResource InfoBarWarningSeverityIconBackground}" />
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                <Setter Property="Glyph" Value="&#x0021;" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
            </Style>
        </Style>

        <Style Selector="^:success">
            <Style Selector="^ /template/ ui|FABorder#ContentRoot">
                <Setter Property="Background" Value="{DynamicResource InfoBarSuccessSeverityBackgroundBrush}" />
            </Style>
            <Style Selector="^ /template/ Ellipse#IconBackground">
                <Setter Property="Fill" Value="{DynamicResource InfoBarSuccessSeverityIconBackground}" />
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                <Setter Property="Glyph" Value="&#xE10B;" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                <Setter Property="Margin" Value="0,19,14,0" />
            </Style>
        </Style>


        <Style Selector="^:standardIcon">
            <Style Selector="^ /template/ Panel#StandardIconArea">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ Viewbox#UserIconBox">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^:icon">
            <Style Selector="^ /template/ Panel#StandardIconArea">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ Viewbox#UserIconBox">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <!-- CloseButton, visible is default -->
        <Style Selector="^:closehidden /template/ Button#CloseButton">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <!-- Visible -->
        <Style Selector="^:hidden /template/ ui|FABorder#ContentRoot">
            <Setter Property="IsVisible" Value="False" />
        </Style>


        <Style Selector="^:foregroundset">
            <Style Selector="^ /template/ TextBlock#Title">
                <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#Message">
                <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
            </Style>
        </Style>
        
    </ControlTheme>
</ResourceDictionary>
