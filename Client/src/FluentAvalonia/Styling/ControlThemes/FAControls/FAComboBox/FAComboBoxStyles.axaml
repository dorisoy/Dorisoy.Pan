<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="using:FluentAvalonia.UI.Controls">
    <Design.PreviewWith>
        <Border Padding="20">
            <ui:FAComboBox Width="150" IsEditable="True" Text="asdg">

            </ui:FAComboBox>
        </Border>
    </Design.PreviewWith>

    <ControlTheme TargetType="TextBox"
                  x:Key="ComboBoxTextBoxStyle"
                  BasedOn="{StaticResource {x:Type TextBox}}">

    </ControlTheme>

    <ControlTheme x:Key="{x:Type ui:FAComboBox}"
                  TargetType="{x:Type ui:FAComboBox}">
        <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
        <Setter Property="MaxDropDownHeight" Value="504" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="TextBoxTheme" Value="{StaticResource ComboBoxTextBoxStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="ItemsPanel">
            <ItemsPanelTemplate>
                <VirtualizingStackPanel />
            </ItemsPanelTemplate>
        </Setter>
        <Setter Property="PlaceholderForeground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid Name="LayoutRoot"
                      RowDefinitions="Auto,*,Auto"
                      ColumnDefinitions="*,38">
                    <ContentPresenter Name="HeaderContentPresenter"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      FlowDirection="{TemplateBinding FlowDirection}"
                                      Foreground="{DynamicResource ComboBoxHeaderForeground}"
                                      FontWeight="{DynamicResource ComboBoxHeaderThemeFontWeight}"
                                      LineHeight="20"
                                      Margin="{DynamicResource ComboBoxTopHeaderMargin}"
                                      TextWrapping="Wrap"
                                      VerticalAlignment="Top"
                                      IsVisible="False" />

                    <Border Name="HighlightBackground"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="-4"
                            Background="{DynamicResource ComboBoxBackgroundFocused}"
                            BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushFocused}"
                            BorderThickness="{DynamicResource ComboBoxBackgroundBorderThicknessFocused}"
                            CornerRadius="{DynamicResource ComboBoxHighlightBorderCornerRadius}"
                            Opacity="0" />

                    <Border Name="Background"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            TemplatedControl.IsTemplateFocusTarget="True"
                            MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />

                    <Rectangle Name="Pill"
                               Theme="{StaticResource ComboBoxItemPill}"
                               Margin="1 0 0 0"
                               Grid.Row="1" Grid.Column="0"
                               Opacity="0"
                               RenderTransform="scaleY(1)" />

                    <ContentPresenter Name="ContentPresenter"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"/>
                    <!-- WinUI can place this in the ContentPresenter, we can't, so we place it here as if its in the CP -->
                    <TextBlock Name="PlaceholderTextBlock"
                               Grid.Row="1"
                               Grid.Column="0"
                               Margin="{TemplateBinding Padding}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Text="{TemplateBinding PlaceholderText}"
                               IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />

                    <TextBox Name="EditableText"
                             Grid.Row="1"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             Theme="{TemplateBinding TextBoxTheme}"
                             Margin="0,0,0,0"
                             Padding="{DynamicResource ComboBoxEditableTextPadding}"
                             BorderBrush="Transparent"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Watermark="{TemplateBinding PlaceholderText}"
                             Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                             Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay}"
                             IsVisible="False"
                             AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                             CornerRadius="{TemplateBinding CornerRadius}"  />

                    <Border Name="DropDownOverlay"
                            Grid.Row="1"
                            Grid.Column="1"
                            Background="Transparent"
                            Margin="4,4,4,4"
                            IsVisible="False"
                            CornerRadius="{StaticResource ComboBoxDropDownButtonBackgroundCornerRadius}"
                            Width="30"
                            HorizontalAlignment="Right" />

                    <ui:FontIcon Name="DropDownGlyph"
                                 MinHeight="{DynamicResource ComboBoxMinHeight}"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 IsHitTestVisible="False"
                                 Margin="0 0 14 0"
                                 Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Center"
                                 Width="12" Height="12"
                                 FontSize="12"
                                 FontFamily="{StaticResource SymbolThemeFontFamily}"
                                 Glyph="&#xE70D;" />

                    <!-- Skipping description property -->

                    <Popup Name="Popup"
                           WindowManagerAddShadowHint="False"
                           IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                           MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                           MaxHeight="{TemplateBinding MaxDropDownHeight}"
                           PlacementTarget="Background"
                           IsLightDismissEnabled="True"
                           InheritsTransform="True">
                        <ui:FABorder Name="PopupBorder"
                                     Background="{DynamicResource ComboBoxDropDownBackground}"
                                     BackgroundSizing="InnerBorderEdge"
                                     BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
                                     BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}"
                                     Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
                                     HorizontalAlignment="Stretch"
                                     CornerRadius="{DynamicResource OverlayCornerRadius}">
                            <ScrollViewer Name="ScrollViewer"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Foreground="{DynamicResource ComboBoxDropDownForeground}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"/>
                            </ScrollViewer>
                        </ui:FABorder>
                    </Popup>

                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
            <Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style Selector="^ /template/ TextBox#EditableText">
            <Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>

        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPointerOver}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundPointerOver}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundPointerOver}" />
                <!--<Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={DynamicResource ComboBoxPlaceHolderForegroundPointerOver}}" />-->
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPressed}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundPressed}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundPressed}" />
                <!--<Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={DynamicResource ComboBoxPlaceHolderForegroundPressed}}" />-->
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#HeaderContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxHeaderForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundDisabled}" />
                <!--<Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={DynamicResource ComboBoxPlaceHolderForegroundDisabled}}" />-->
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
            </Style>
        </Style>

        <Style Selector="^:focus-visible">
            <Style Selector="^ /template/ Border#HighlightBackground">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^ /template/ Rectangle#Pill">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundFocused}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocused}" />
                <!--<Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={DynamicResource ComboBoxPlaceHolderForegroundFocused}}" />-->
            </Style>
            <Style Selector="^ /template/ ui|FontIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}" />
            </Style>

            <Style Selector="^:pressed">
                <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundFocusedPressed}" />
                </Style>
                <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
                    <!--<Setter Property="Foreground" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}}" />-->
                </Style>
                <Style Selector="^ /template/ ui|FontIcon#DropDownGlyph">
                    <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
                </Style>
            </Style>

            <!-- Skip FocusedDropDown state-->
        </Style>

        <Style Selector="^:header /template/ ContentPresenter#HeaderContentPresenter">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <!-- Editable states -->
        <Style Selector="^:editable">
            <Style Selector="^ /template/ TextBox#EditableText">
                <Setter Property="IsVisible" Value="True" />
                <!-- 
                This isn't a hack, this is what WinUI does
                When not focused, they set the width to 0 to hide the TextBox
                Its done in code but you can see this in the live visual tree &
                property explorer of UWP -->
                <Setter Property="Width" Value="0" />
                <Setter Property="MinWidth" Value="0" />
            </Style>
            <Style Selector="^ /template/ Popup#Popup">
                <Setter Property="PlacementConstraintAdjustment" Value="FlipY" />
            </Style>

            <Style Selector="^:focus-within /template/ TextBox#EditableText,
                             ^:dropdownopen /template/ TextBox#EditableText">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Width" Value="NaN" />
            </Style>

            <Style Selector="^:focus-within /template/ TextBlock#PlaceholderTextBlock
                             ^:dropdownopen /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="IsVisible" Value="False" />
            </Style>

            <Style Selector="^:dropdownopen /template/ ContentPresenter#ContentPresenter,
                             ^:focus-within /template/ ContentPresenter#ContentPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>

            <Style Selector="^ /template/ Border#DropDownOverlay">
                <Setter Property="IsVisible" Value="True" />


            </Style>
            <Style Selector="^ /template/ Border#DropDownOverlay:pointerover">
                <Setter Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}" />
            </Style>

            <Style Selector="^ /template/ Border#DropDownOverlay:pressed">
                <Setter Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPressed}" />
            </Style>

            <Style Selector="^:dropdownopen">
                <Style Selector="^ /template/ Border#HighlightBackground">
                    <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                </Style>
                <Style Selector="^ /template/ TextBox#EditableText">
                    <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                </Style>
                <Style Selector="^ /template/ ui|FABorder#PopupBorder">
                    <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                </Style>

                <Style Selector="^:popupAbove">
                    <Style Selector="^ /template/ Border#HighlightBackground">
                        <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                    </Style>
                    <Style Selector="^ /template/ TextBox#EditableText">
                        <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                    </Style>
                    <Style Selector="^ /template/ ui|FABorder#PopupBorder">
                        <Setter Property="CornerRadius" Value="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                    </Style>
                </Style>
            </Style>
        </Style>
    </ControlTheme>

</ResourceDictionary>
